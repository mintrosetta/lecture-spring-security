CSRF
	เป็นการโจมตีด้านความปลอดภัย เพื่อขโมยข้อมูลของเรา
	โดยจะไม่ได้เป็นการขโมย cookie หรือ session แต่จะเป็นการหลอกให้ผู้ใช้
	ทำอะไรบางอย่างที่นอกเหนือจากระบบของเรา โดยที่ผู้ใช้ไม่รู้ว่านี่คือ csrf attack
	
	โดยเราสามารถปกป้องการโจมตีรูปแบบนี้ได้โดยการไม่อนุญาติให้มีการส่งคำขอแบบ post, put method
	เพื่อสร้างข้อมูลใหม่ในฐานข้อมูล
	
	ตัวอย่างการโจมตี
		ขั้นตอน
			- ผู้ใช้เข้าสู่ระบบ netflix.com
			- netflix.com สร้าง cookies ส่งมาเก็บที่ browser
			- browser จัดเก็บ cookies ของ netflix แยกออกมา ถ้าเป็น browser อื่น ๆ ก็จะ
			  จัดเก็บในพื้นที่ของตัวเอง
			- hacker สร้างเว็บไซด์แปลกปลอม หลอกให้ผู้ใช้คลิกลิ้งค์ โดยอาจวางบางอย่างล่อใจผู้ใช้
			  เช่น ส่วนลด iPhone 90%
			- ด้านหลัง link ที่ผู้ใช้กดจะถูกส่งไปยังเป้าหมาย เช่น netflix
			
				ตัวอย่างนี้ hacker พยายามเปลี่ยน email ของผู้ใช้เมื่อเขาเผลอกดลิ้งค์
				และเมื่อมีการร้องขอไปที่ netflix.com ตัว browser จะทำการส่ง cookies ไปด้วย
				<form id="form" action="https://netflix.com/changeEmail" method="POST">
					<input type="hidden" name="email" value="user@email.com"/>
				<form />
				
				<script>
					document.getElementById("form").submit();
				</script>
				
	แนวทางการแก้ปัญหา
		เราจะต้องตรวจสอบ http request ว่ามาจาก client ของเราเองหรือไม่ หรือมาจากแหล่งอื่น ๆ ?
		โดยเราจะใช้ csrf token เพื่อระบุว่า http request นี้มาจาก client
		
	CSRF Token
		เป็น token แบบสุ่ม ถูกใช้งานโดยเว็บแอปพลิเคชันจำนวนมากเพื่อป้องกัน csrf attack
		
	ขั้นตอนที่ถูกเพิ่มมา เพื่อการป้องกัน
		backend สร้าง CSRF Token แบบสุ่ม จากนั้นส่งไปให้ client ผ่าน cookies คู่กับ jwt
		{
			"token": "123456789",
			"csrf": "@#$#@WDSDF!DWQDDSA"
		}
		
		จากนั้นเมื่อมีการสร้าง HTTP Request ทางฝั่ง client จะต้องทำ csrf token จาก cookies
		ใส่เข้ามาใน header และทำการส่ง request
		
		วิธีการนี้จะทำให้ client ของ hacker ไม่สามารถส่งคำขอมาที่ API ของเราได้
		เนื่องจากไม่สามารถเข้าถึง cookie csrf ได้ ทำให้ไม่สามารถปลอม csrf ได้
		
	ช้อควรระวัง
		เราไม่ควรเปิดการป้องกัน CSRF เป็น default เนื่องจากบางคำขออาจไม่จำเป็นต้องใช้
		ถ้าเปิดไว้จะทำให้ไม่สามารถจัดการ resource ได้
		
	CsrfTokenRequestAttributeHandler
		ใช้จัดการกับ csrf token
		
	CookieCsrfTokenRepository
		ใช้จัดการและเก็บรักษา csrf ในคุกกี้
		
	withHttpOnlyFalse()
		เป็นการบอก spring ให้สร้าง token ที่ javascript สามารถอ่านได้
		
	BasicAuthenticationFilter
		เป็น filter ของ Spring Security ใช้เมื่อเราต้องการจัดการกับ basic authentication
		
	.addFilterAt(new CsrfCookieFilter(), BasicAuthenticationFilter.class) 
		ให้ทำการเรียกใช้งาน CsrfCookieFilter หลังจาก BasicAutenticationFilter
		เพราะว่าหลังจากที่ BasdicAuthenticationFilter ทำงานเสร็จ (login เสร็จ) 
		Csrf จะถูกสร้างขึ้น และเราต้องการส่ง Csrf token เข้าไปใน header เผื่อใช้ในการ response
		เราจึงใช้ CsrfCookieFilter
		
		
		